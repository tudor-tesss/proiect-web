plugins {
    id 'java'
}

group 'com.idis'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.1'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.2.0'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'
    testImplementation 'org.powermock:powermock-module-junit4-rule:2.0.9'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.9'
    testImplementation 'org.powermock:powermock-module-junit4-rule-agent:2.0.9'

    implementation 'org.postgresql:postgresql:42.5.4'

    implementation 'org.checkerframework:checker:3.8.0'
    implementation 'com.sendgrid:sendgrid-java:4.9.3'
    implementation 'com.rometools:rome:1.15.0'
    
    implementation 'com.itextpdf:itextpdf:5.5.13'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(19))
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'com.idis.presentation.Main'
        )
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE

    // Exclude signature files
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
}

test {
    useJUnitPlatform()
}